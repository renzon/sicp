#lang racket

(define tolerance 0.00001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((y (f guess)))
      (let ((next (/ (+ y (/ guess y)) 2)))
        (display next)
        (newline)
        (if (close-enough? guess next)
            next
            (try next)))))
  (try first-guess))

(define (f x)
  (/ (log 1000) (log x)))

(fixed-point f 2.0)

#|

Result for regular fixed point:

(define tolerance 0.00001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (display next)
      (newline)
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))

(define (f x)
  (/ (log 1000) (log x)))

9.965784284662087
3.004472209841214
6.279195757507157
3.759850702401539
5.215843784925895
4.182207192401397
4.8277650983445906
4.387593384662677
4.671250085763899
4.481403616895052
4.6053657460929
4.5230849678718865
4.577114682047341
4.541382480151454
4.564903245230833
4.549372679303342
4.559606491913287
4.552853875788271
4.557305529748263
4.554369064436181
4.556305311532999
4.555028263573554
4.555870396702851
4.555315001192079
4.5556812635433275
4.555439715736846
4.555599009998291
4.555493957531389
4.555563237292884
4.555517548417651
4.555547679306398
4.555527808516254
4.555540912917957
4.555532270803653
4.555532270803653
>

Result with average:

5.0832354742190375
2.722470147620354
3.6459305414596455
3.0113351718183985
3.3733837551667225
3.1374501073475773
3.280344787537805
3.1894959991350005
3.2456025629904723
3.2103020770433446
3.232259701460724
3.218502791455001
3.2270832884627607
3.221716391155962
3.2250673890305976
3.222972791583661
3.224281160271602
3.223463551968002
3.2239743444975235
3.2236551787943353
3.223854586825131
3.223729992761998
3.223807838418719
3.2237591996622443
3.2237895891683985
3.223770601609619
3.2237824650848457
3.22377505272651
3.22377505272651
> 
|#